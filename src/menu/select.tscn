[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/image/corner.png" type="Texture" id=1]
[ext_resource path="res://assets/font/m3x6.tres" type="DynamicFont" id=2]
[ext_resource path="res://assets/image/btn.png" type="Texture" id=3]
[ext_resource path="res://assets/font/m6x11.tres" type="DynamicFont" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var map_path := \"res://src/map/\"

var maps = []

var cam : Camera2D

var cursor = 0

var screens : Control
var screen : Control
var screen_dist = 105
var columns = 4

var wait = 0

var last_pick = 0

# Called when the node enters the scene tree for the first time.
func _ready():
	cam = $Camera2D
	
	screens = $Control/Screens
	screen = $Control/Screen.duplicate()
	$Control/Screen.queue_free()
	
	# get world maps
	maps = dir_list(map_path)
	print(\"maps: \", maps)
	
	# make screens
	for i in maps.size():
		var new = screen.duplicate()
		var sy = i / columns
		var sx = i % columns
		new.rect_position += Vector2(sx + (sy % 2) * 0.5, sy) * screen_dist
		new.get_node(\"Label\").text = maps[i]
		screens.add_child(new)
		view_scene(new.get_node(\"ViewportContainer/Viewport\"), map_path + maps[i])
	
	last_pick = Shared.last_pick
	scroll(last_pick)

func _process(delta):
	if wait > 0:
		wait -= delta
		if wait < 0:
			HUD.wipe.connect(\"finish\", self, \"load_level\")
			HUD.wipe.start()
		return
	
	var btnx = btn.p(\"right\") - btn.p(\"left\")
	var btny = btn.p(\"down\") - btn.p(\"up\")
	if btn.p(\"jump\"):
		open_map()
	if btnx or btny:
		scroll(btnx + (btny * columns))

func scroll(arg = 0):
	cursor = clamp(cursor + arg, 0, maps.size() - 1)
	cam.position = screens.get_children()[cursor].rect_position + Vector2(50, 50)

# look into a folder and return a list of filenames without file extension
func dir_list(path : String):
	var array = []
	var dir = Directory.new()
	if dir.open(path) == OK:
		dir.list_dir_begin(true, true)
		var file_name = dir.get_next()
		while file_name:
			array.append(file_name.split(\".\")[0])
			file_name = dir.get_next()
		dir.list_dir_end()
	array.sort()
	return array

# view a scene inside the viewport by path
func view_scene(port, path):
	for i in port.get_children():
		i.queue_free()
	
	if ResourceLoader.exists(path + \".tscn\"):
		var m = load(path + \".tscn\").instance()
		port.add_child(m)
		for i in get_tree().get_nodes_in_group(\"player\"):
			i.set_process(false) # dont process player

func open_map():
	Shared.last_pick = cursor
	Shared.map_name = maps[cursor]
	Shared.do_reset()
"

[sub_resource type="Animation" id=2]
resource_name = "New Anim"
length = 1.15
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("c1:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -55, -55 ), Vector2( -45, -45 ), Vector2( -55, -55 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("c2:position")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 55, -55 ), Vector2( 45, -45 ), Vector2( 55, -55 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("c3:position")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -55, 55 ), Vector2( -45, 45 ), Vector2( -55, 55 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("c4:position")
tracks/3/interp = 2
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 55, 55 ), Vector2( 45, 45 ), Vector2( 55, 55 ) ]
}

[node name="Node2D" type="Node2D"]
position = Vector2( 1, 1 )
script = SubResource( 1 )

[node name="Control" type="Control" parent="."]
margin_right = 320.0
margin_bottom = 180.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Screens" type="Control" parent="Control"]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Screen" type="Control" parent="Control"]
margin_left = 110.0
margin_top = 40.0
margin_right = 150.0
margin_bottom = 80.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="Control/Screen"]
visible = false
margin_left = -2.00002
margin_top = -2.0
margin_right = 102.0
margin_bottom = 102.0
color = Color( 1, 0.945098, 0.909804, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ViewportContainer" type="ViewportContainer" parent="Control/Screen"]
margin_left = -1.52588e-05
margin_right = 100.0
margin_bottom = 100.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="Control/Screen/ViewportContainer"]
size = Vector2( 100, 100 )
own_world = true
handle_input_locally = false
render_target_update_mode = 3

[node name="Label" type="Label" parent="Control/Screen"]
margin_top = 46.0
margin_right = 100.0
margin_bottom = 54.0
grow_horizontal = 2
custom_fonts/font = ExtResource( 2 )
custom_colors/font_color = Color( 1, 0.941176, 0.905882, 1 )
text = "world 1"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 160, 90 )
current = true
smoothing_enabled = true
editor_draw_screen = false

[node name="Cursor" type="Node2D" parent="Camera2D"]

[node name="AnimationPlayer" type="AnimationPlayer" parent="Camera2D/Cursor"]
autoplay = "New Anim"
"anims/New Anim" = SubResource( 2 )

[node name="c1" type="Sprite" parent="Camera2D/Cursor"]
modulate = Color( 1, 0.945098, 0.909804, 1 )
position = Vector2( -50, -50 )
texture = ExtResource( 1 )

[node name="c2" type="Sprite" parent="Camera2D/Cursor"]
modulate = Color( 1, 0.945098, 0.909804, 1 )
position = Vector2( 50, -50 )
rotation = 1.5708
texture = ExtResource( 1 )

[node name="c3" type="Sprite" parent="Camera2D/Cursor"]
modulate = Color( 1, 0.945098, 0.909804, 1 )
position = Vector2( -50, 50 )
rotation = 4.71239
texture = ExtResource( 1 )

[node name="c4" type="Sprite" parent="Camera2D/Cursor"]
modulate = Color( 1, 0.945098, 0.909804, 1 )
position = Vector2( 50, 50 )
rotation = 3.14159
texture = ExtResource( 1 )

[node name="BG" type="CanvasLayer" parent="."]
layer = -1

[node name="Background" type="Node2D" parent="BG"]
z_index = -1000
z_as_relative = false

[node name="ColorRect" type="ColorRect" parent="BG/Background"]
margin_right = 240.0
margin_bottom = 180.0
color = Color( 0.027451, 0.0392157, 0.0745098, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HUD" type="CanvasLayer" parent="."]

[node name="c" type="Sprite" parent="HUD"]
position = Vector2( 19, 138 )
texture = ExtResource( 3 )
hframes = 6
vframes = 4
region_rect = Rect2( 0, 0, 18, 18 )

[node name="x" type="Sprite" parent="HUD"]
position = Vector2( 19, 161 )
texture = ExtResource( 3 )
hframes = 6
vframes = 4
frame = 1
region_rect = Rect2( 0, 0, 18, 18 )

[node name="esc" type="Sprite" parent="HUD"]
position = Vector2( 28, 19 )
texture = ExtResource( 3 )
hframes = 3
vframes = 4
frame = 6
region_rect = Rect2( 0, 0, 18, 18 )

[node name="ent" type="Sprite" parent="HUD"]
position = Vector2( -52, 18 )
texture = ExtResource( 3 )
hframes = 3
vframes = 4
frame = 7
region_rect = Rect2( 0, 0, 18, 18 )

[node name="return" type="Sprite" parent="HUD"]
position = Vector2( -56, 43 )
texture = ExtResource( 3 )
hframes = 3
vframes = 4
frame = 10
region_rect = Rect2( 0, 0, 18, 18 )

[node name="Arrows" type="Node2D" parent="HUD"]
position = Vector2( 203, 152 )

[node name="up" type="Sprite" parent="HUD/Arrows"]
position = Vector2( 0, -9 )
texture = ExtResource( 3 )
hframes = 6
vframes = 4
frame = 6
region_rect = Rect2( 0, 0, 18, 18 )

[node name="down" type="Sprite" parent="HUD/Arrows"]
position = Vector2( 0, 9 )
texture = ExtResource( 3 )
hframes = 6
vframes = 4
frame = 7
region_rect = Rect2( 0, 0, 18, 18 )

[node name="left" type="Sprite" parent="HUD/Arrows"]
position = Vector2( -18, 0 )
texture = ExtResource( 3 )
hframes = 6
vframes = 4
frame = 8
region_rect = Rect2( 0, 0, 18, 18 )

[node name="right" type="Sprite" parent="HUD/Arrows"]
position = Vector2( 18, 0 )
texture = ExtResource( 3 )
hframes = 6
vframes = 4
frame = 9
region_rect = Rect2( 0, 0, 18, 18 )

[node name="Label" type="Label" parent="HUD"]
margin_left = 140.0
margin_top = 146.0
margin_right = 170.0
margin_bottom = 159.0
custom_fonts/font = ExtResource( 4 )
custom_colors/font_outline_modulate = Color( 0, 0, 0, 1 )
text = "move"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label2" type="Label" parent="HUD"]
margin_left = 31.0
margin_top = 156.0
margin_right = 61.0
margin_bottom = 169.0
custom_fonts/font = ExtResource( 4 )
text = "select"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label3" type="Label" parent="HUD"]
margin_left = 31.0
margin_top = 132.0
margin_right = 69.0
margin_bottom = 145.0
custom_fonts/font = ExtResource( 4 )
text = "back"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label4" type="Label" parent="HUD"]
margin_left = 49.0
margin_top = 13.0
margin_right = 87.0
margin_bottom = 26.0
custom_fonts/font = ExtResource( 4 )
text = "menu"
__meta__ = {
"_edit_use_anchors_": false
}
